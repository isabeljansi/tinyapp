const express = require("express");
const app = express();
const PORT = 8080; // default port 8080
app.set("view engine", "ejs") //tells the Express app to use EJS as its templating engine

const cookieParser = require('cookie-parser')
app.use(cookieParser())


function generateRandomString() {
  const length = 6;
  const chars = '0abcde1NOPQRST2ABCDEFG345UVWXYZ6ijkltuv7mnopqrs89fghwxyzHIJKLM'
  let result = "";
  for (let i = length; i > 0; --i) 
    result += chars[Math.floor(Math.random() * chars.length)];
    return result;
}


const urlDatabase = {
  "b2xVn2": "http://www.lighthouselabs.ca",
  "9sm5xK": "http://www.google.com"
};


app.get("/", (req, res) => { //registers a handler on the root path, "/".
  res.send("Hello!");
});

app.listen(PORT, () => {
  console.log(`Example app listening on port ${PORT}!`);
});

const bodyParser = require("body-parser");
app.use(bodyParser.urlencoded({extended: true}));


app.get("/urls.json", (req, res) => {
  res.json(urlDatabase);
});

app.get("/hello", (req, res) => {
  res.send("<html><body>Hello <b>World</b></body></html>\n");
});

app.get("/urls", (req, res) => {
  const templateVars = { username: req.cookies["username"], urls: urlDatabase };
  res.render("urls_index", templateVars);
});

app.get("/urls/new", (req, res) => {
  const templateVars = { username: req.cookies["username"] };
  res.render("urls_new", templateVars);
});

app.get("/urls/:shortURL", (req, res) => {
  const templateVars = { username: req.cookies["username"], shortURL: req.params.shortURL, longURL: urlDatabase[req.params.shortURL] };
  res.render("urls_show", templateVars);
});

// app.post("/urls", (req, res) => {
//   console.log(req.body);  // Log the POST request body to the console
//   res.send("Ok");         // Respond with 'Ok' (we will replace this)
// });

//add the received input on the new form to key value pairs of the urlDatabase
//objectName.keyName = "value" or objectName["keyName"] = "value(long URL submitted through the /new form)"
//keyName will be the shortname generated by the generate random function

app.post("/urls", (req, res) => {
  const longURL = req.body.longURL
  const shortURL = generateRandomString(); 
  urlDatabase[shortURL] = longURL; //adds  the key value pair to the urlDatabase
  res.redirect(`/urls/${shortURL}`);
});

//page of the shortURL
app.get("/u/:shortURL", (req, res) => {
  // console.log(req.params);
  // console.log(req.params.shortURL)
  // console.log(urlDatabase[req.params.shortURL]);
  const longURL = urlDatabase[req.params.shortURL]
  //console.log(longURL)
  res.redirect(longURL);
});

app.post("/urls/:shortURL/delete", (req, res) => {
  //console.log(req.params.shortURL)
    delete urlDatabase[req.params.shortURL];
  res.redirect(`/urls/`);
});

//to post edits to the link
app.get("/urls/:shortURL", (req, res) => {
  console.log(req.body)
  const templateVars = { username: req.cookies["username"], shortURL: req.params.shortURL, longURL: urlDatabase[req.params.shortURL] };
  res.render("urls_show", templateVars);
});

app.post("/urls/:shortURL", (req, res) => {
  //console.log(req.body);
  const shortURL = req.params.shortURL
  urlDatabase[shortURL] = req.body.longURL;
  res.redirect(`/urls/${shortURL}`);
});


// app.get('/urls', (req, res) => {
//   const username = req.body.username;
//   const templateVars = { username };
//   res.render('urls/', templateVars);
// });

app.post("/login", (req, res) => {
   // Insert Login Code Here
   const username = req.body.username;
   res.cookie('username', username)
   res.redirect(`/urls`);
});

app.post("/logout", (req, res) => {
  // Insert Login Code Here
  const username = req.body.username;
  res.clearCookie('username', username)
  res.redirect(`/urls`);
});